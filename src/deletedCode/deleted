          const rowFill = row.map((cell, index) => {
            if (
              index === 0 ||
              index === 1 ||
              index === 2 ||
              index === 3 ||
              index === 4 ||
              index === 5 ||
              index === 6 ||
              index === 14 ||
              index === 15 ||
              index === 16 ||
              index === 17 ||
              index === 18 ||
              index === 19 ||
              index === 20 ||
              index === 21
            ) {
              if (index > 13) {
                return (
                <React.Fragment>
                {/* <td key={index}>
                  <img src={cell} alt={cell} style={{ width: "100px" }} />
                </td> */}
                <Img  data={cell} index={index}/>
                </React.Fragment>
                )
              } else if (index === 6) {
                return (
                  <React.Fragment>
                    {this.state.showAll&&<SizeCell data={this.state.sizes} range={sheetRowLessOne + 1} />}
                    {!this.state.showAll&&<UrlCell data={cell} range={{ start: sheetRowLessOne + 1, end: columnGroupEndRows[columnGroupIndex] }} />}
                    <FinishedButton row={sheetRowLessOne+1} st={this.state}/>
                  </React.Fragment>
                )
              } else if (index === 5&&!this.state.showAll) {
                return (<ColorsCell data={cell} range={{ start: sheetRowLessOne + 1, end: columnGroupEndRows[columnGroupIndex] }} />)
              }
              return (<td key={index}>{cell}</td>)
            }
            return undefined
          }).filter((a) => typeof a !== 'undefined')